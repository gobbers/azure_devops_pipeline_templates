parameters:
- name: stage
  type: string
- name: project
  type: string
- name: 'terraform'
  type: object

jobs:
- deployment: deploy
  variables:
    TF_INPUT: "0"
    TF_IN_AUTOMATION: "1"
    TF_VERSION: "${{ parameters.terraform.version }}"
    TF_PLUGIN_CACHE_DIR: "${{ parameters.terraform.cache_dir }}"
    TF_MODULES_REPO: "${{ parameters.terraform.modules_repo }}"

  displayName: Deploy to ${{ parameters.stage }}
  environment: ${project}-${{ parameters.stage }}
  strategy:
    runOnce:
      deploy:
        steps:
          - script: |
              git config --global http.$(TF_MODULES_REPO).extraHeader "Authorization: Bearer $(System.AccessToken)"
            displayName: Prepare cloning external Terraform dependencies
          - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
            displayName: "Install Terraform $(TF_VERSION)"
            inputs:
              terraformVersion: $(TF_VERSION)
          - script: |
              mkdir -p $(TF_PLUGIN_CACHE_DIR)
              terraform init && terraform apply -auto-approve
            displayName: Terraforming ${{ parameters.stage }}
            workingDirectory: $(Pipeline.Workspace)/terraform/env/${{ parameters.stage }}
